{"version":3,"sources":["application/resources/avatars/avatar.svg","application/components/App.js","index.js"],"names":["module","exports","ShowEmptyComponent","props","className","Row","xs","lg","md","sm","message","TweetItemComponent","ListGroup","Item","Col","Image","src","img","roundedCircle","data-testid","Account","User","Time","Message","icon","faComment","Comments","faRetweet","Retweets","faHeart","Likes","TweetCardComponent","useState","filter","setFilter","res","setRes","body","setBody","useEffect","fetch","then","response","json","tweetData","filtered_res","tweet","entry","matching_terms","some","term","qval","body_dat","map","ele","key","id","Id","user","Date","date","Intl","DateTimeFormat","year","month","day","format","time","account","likes","retweets","comments","Card","style","height","Header","Body","padding","overflowY","length","SlackItemComponent","Author","SlackCardComponent","slackData","slack","Channel","channel","author","DropboxItemComponent","Type","Title","faCalendarAlt","Created","faShareSquare","Shared","join","DropboxCardComponent","dropboxData","dropbox","title","Path","path","created","shared_with","type","CalendarItemComponent","faClock","Start","End","faUserFriends","Invitees","CalendarCardComponent","calendarData","calendar","invitees","start","end","ContactItemComponent","Name","Company","faEnvelope","Emails","faMobileAlt","Phones","LastContact","ContactCardComponent","contactsData","contacts","contact","name","company","emails","phones","last_contact","SearchComponent","query","setQuery","InputGroup","FormControl","outline","boxShadow","border","placeholder","aria-label","aria-describedby","onChange","e","target","value","onKeyDown","queryHandler","handleEnter","Append","Text","faSearch","onClick","HeaderComponent","App","Container","fluid","marginTop","span","offset","q","qobj","tspt","now","CardDeck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.496ddfac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.32b9e209.svg\";","import React, {useState, useEffect, Fragment} from 'react';\nimport './../css/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Row, Col, InputGroup, FormControl, CardDeck, Card, Image, ListGroup} from 'react-bootstrap';\n\n//font awesome icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSearch, faEnvelope, faMobileAlt, faClock, faCalendarAlt, faUserFriends, faShareSquare, faComment, faRetweet, faHeart} from '@fortawesome/free-solid-svg-icons';\n\n//file icons \nimport 'file-icon-vectors/dist/file-icon-classic.css';\n\n//avatar\nimport img from './../resources/avatars/avatar.svg';\n\n\n//empty msg\nexport const ShowEmptyComponent = (props) => {\n  return(\n       <div className=\"emptctr\">\n         <Row xs={12} lg={12} md={12} sm={12}>\n          <span className=\"emptmsgdis\">{props.message}</span>\n         </Row> \n       </div> \n\n  )\n}\n\n\n\n//tweet item\nexport const TweetItemComponent = (props) => { \n  return(\n    <ListGroup.Item>\n    <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n      <Col xs={12} sm={12} lg={4} md={4}>\n              <Image src={img} roundedCircle />\n      </Col> \n      <Col xs={12} sm={12} lg={8} md={8}>\n        <span data-testid=\"\" className=\"ctname atur gpullr\">{props.Account}</span> <span className=\"tsmpt\">{props.User}</span> . <span className=\"tsmpt\">{props.Time}</span>       \n      </Col>  \n    </Row>\n    <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n      <Col>\n        <span>{props.Message}</span>\n      </Col>\n    </Row>\n    <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n      <Col>\n        <FontAwesomeIcon icon={faComment} /> <span className=\"twteles\">{props.Comments}</span>\n      </Col>\n      <Col>\n        <FontAwesomeIcon icon={faRetweet} /> <span className=\"twteles\">{props.Retweets}</span>\n      </Col>\n      <Col>\n        <FontAwesomeIcon icon={faHeart} /> <span className=\"twteles\">{props.Likes}</span>\n      </Col>\n    </Row>\n  </ListGroup.Item>\n  )\n}\n\n\n\n//tweet card\nexport const TweetCardComponent =(props) => {\n  const [filter, setFilter] = useState({});\n  const [res, setRes] = useState([]);\n  const [body, setBody] = useState(null);\n\n  useEffect(()=>{\n    if (typeof props.filter !== 'undefined')\n    {\n      setFilter(props.filter);\n    }\n  },[props])\n\n  useEffect(()=>{\n    fetch('/data-sources/tweet.json').then(response => response.json()).then(tweetData => {\n      if(tweetData !== ''){\n        let filtered_res = tweetData.tweet.filter(entry => entry.matching_terms.some(term => term === filter.qval));\n        setRes(filtered_res);\n      }\n    });  \n  },[filter])\n\n\n  useEffect(()=>{\n    let body_dat = res.map(ele =>   \n    <TweetItemComponent\n    key={ele.id}\n    Id={ele.id?ele.id:\"\"}\n    User={ele.user?ele.user:\"\"}\n    Date={ele.date?new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    }).format(new Date(ele.date)):\"\"} \n    Message={ele.message?ele.message:\"\"}\n    Time={ele.time?ele.time:\"\"}\n    Account = {ele.account?ele.account:\"\"}\n    Likes = {ele.likes?ele.likes:\"\"}\n    Retweets = {ele.retweets?ele.retweets:\"\"}\n    Comments={ele.comments?ele.comments:\"\"}\n    />       \n  ) \n    setBody(body_dat);    \n  },[res])\n\n  return(\n    <Card style={{height: \"400px\"}}>\n      <Card.Header>Tweets</Card.Header>\n      <Card.Body style={{padding : \"0px\", overflowY: \"scroll\"}}>\n       {body === null || body.length === 0 ? <ShowEmptyComponent message={'No Tweets to display!'}/> : <ListGroup>{body}</ListGroup>}  \n      </Card.Body>\n    </Card>\n  )\n}\n\n\n//slack Item\nexport const SlackItemComponent = (props) => {\nreturn(  \n  <ListGroup.Item>\n  <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n    <Col xs={12} sm={12} lg={4} md={4}>\n            <Image src={img} roundedCircle />\n    </Col> \n    <Col xs={12} sm={12} lg={8} md={8}>\n      <span className=\"ctname atur\">{props.Author}</span> <span className=\"tsmpt\">{props.Time}</span> <br />       \n    </Col>  \n  </Row>\n  <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n    <Col>\n      <span>{props.Message}</span>\n    </Col>\n  </Row>\n</ListGroup.Item>\n)\n\n}\n\n\n\n\n//slack card\nexport const SlackCardComponent =(props) => {\n  const [filter, setFilter] = useState({});\n  const [res, setRes] = useState([]);\n  const [body, setBody] = useState(null);\n\n  useEffect(()=>{\n    if (typeof props.filter !== 'undefined')\n    {\n      setFilter(props.filter);\n    }\n  },[props])\n\n  useEffect(()=>{\n    fetch('/data-sources/slack.json').then(response => response.json()).then(slackData => {\n      if(slackData !== ''){\n        let filtered_res = slackData.slack.filter(entry => entry.matching_terms.some(term => term === filter.qval));\n        setRes(filtered_res);\n      }\n    });\n  },[filter])\n\n  useEffect(()=>{\n    let body_dat = res.map(ele =>   \n    <SlackItemComponent\n    key={ele.id}\n    Id={ele.id?ele.id:\"\"}\n    Channel={ele.channel?ele.channel:\"\"}\n    Author={ele.author?ele.author:\"\"}\n    Date={ele.date?new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    }).format(new Date(ele.date)):\"\"} \n    Time={ele.time?ele.time:\"\"}\n    Message={ele.message?ele.message:\"\"}\n    />       \n  ) \n    setBody(body_dat);    \n  },[res])\n\n\n  return(\n    <Card style={{height: \"400px\"}}>\n      <Card.Header>Slack</Card.Header>\n      <Card.Body style={{padding : \"0px\", overflowY: \"scroll\"}}>\n        {body === null || body.length === 0 ? <ShowEmptyComponent message={'No Messages to display!'}/> : <ListGroup>{body}</ListGroup>}  \n      </Card.Body>\n    </Card>\n  )\n}\n\n\n//dropbox item\nexport const DropboxItemComponent = (props) => {\n  return(\n    <ListGroup.Item>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col>\n            <span className={`fiv-cla fiv-icon-${props.Type} icstyle`}></span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col>\n            <span className=\"cltitle\">{props.Title}</span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span><FontAwesomeIcon icon={faCalendarAlt} /></span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span className=\"ctlstcnt\">{props.Created}</span>    \n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span><FontAwesomeIcon icon={faShareSquare} /></span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span className=\"ctlstcnt\">{props.Shared.join(\"\\n\")}</span>    \n          </Col>  \n        </Row>\n    </ListGroup.Item>\n  )\n}\n\n\n\n//dropbox card\nexport const DropboxCardComponent =(props) => {\n  const [filter, setFilter] = useState({});\n  const [res, setRes] = useState([]);\n  const [body, setBody] = useState(null);\n\n  useEffect(()=>{\n    if (typeof props.filter !== 'undefined')\n    {\n      setFilter(props.filter);\n    }    \n  },[props])\n\n  useEffect(()=>{\n    fetch('/data-sources/dropbox.json').then(response => response.json()).then(dropboxData => {\n      if(dropboxData !== ''){\n        let filtered_res = dropboxData.dropbox.filter(ele => ele.matching_terms.some(term => term === filter.qval)); \n        setRes(filtered_res);\n      }\n    });  \n  },[filter])\n\n  useEffect(()=>{\n    let body_dat = res.map(ele =>   \n    <DropboxItemComponent\n    key={ele.id}\n    Id={ele.id?ele.id:\"\"}\n    Title={ele.title?ele.title:\"\"}\n    Path={ele.path?ele.path:\"\"}\n    Created={ele.created?new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    }).format(new Date(ele.created)):\"\"} \n    Shared={ele.shared_with?ele.shared_with:[\"n/a\"]}\n    Type={ele.type?ele.type:\"\"}\n    />       \n  ) \n    setBody(body_dat);    \n  },[res])\n\n  return(\n    <Card style={{height: \"400px\"}}>\n      <Card.Header>Dropbox</Card.Header>\n      <Card.Body style={{padding : \"0px\", overflowY: \"scroll\"}}>\n        {body === null || body.length === 0 ? <ShowEmptyComponent message={'No Files to display!'}/> : <ListGroup>{body}</ListGroup>}  \n      </Card.Body>\n    </Card>\n  )\n}\n\n\n//calendar Item\nexport const CalendarItemComponent = (props) => {\n  return(\n    <ListGroup.Item>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col>\n            <span className=\"cltitle\">{props.Title}</span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span><FontAwesomeIcon icon={faCalendarAlt} /></span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span className=\"ctlstcnt\">{props.Date}</span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span><FontAwesomeIcon icon={faClock} /></span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span className=\"ctlstcnt\">{`${props.Start} to  ${props.End}`} </span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span><FontAwesomeIcon icon={faUserFriends} /></span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span className=\"ctlstcnt\"> {props.Invitees} </span>\n          </Col>\n        </Row>\n    </ListGroup.Item>\n  )\n}\n\n\n\n\n//calendar card\nexport const CalendarCardComponent =(props) => {\n  const [filter, setFilter] = useState({});\n  const [res, setRes] = useState([]);\n  const [body, setBody] = useState(null);\n\n  useEffect(()=>{\n    if (typeof props.filter !== 'undefined')\n    {\n      setFilter(props.filter);\n    }\n  },[props])\n\n  useEffect(()=>{\n    fetch('/data-sources/calendar.json').then(response => response.json()).then(calendarData => {\n      if(calendarData !== ''){\n        let filtered_res = calendarData.calendar.filter(entry => entry.matching_terms.some(term => term === filter.qval));\n        setRes(filtered_res);\n      }\n    });    \n  },[filter])\n\n  useEffect(()=>{\n    let body_dat = res.map(ele =>   \n    <CalendarItemComponent\n    key={ele.id}\n    Id={ele.id?ele.id:\"\"}\n    Title={ele.title?ele.title:\"\"}\n    Invitees={ele.invitees?ele.invitees:\"\"}\n    Date={ele.date?new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    }).format(new Date(ele.date)):\"\"} \n    Start={ele.start?ele.start:\"\"}\n    End={ele.end?ele.end:\"\"}  \n    />       \n  ) \n    setBody(body_dat);    \n  },[res])\n\n  return(\n    <Card style={{height: \"400px\"}}>\n      <Card.Header>Calendar</Card.Header>\n      <Card.Body style={{padding : \"0px\", overflowY: \"scroll\"}}>\n        {body === null || body.length === 0 ? <ShowEmptyComponent message={'No Events to display!'}/> : <ListGroup>{body}</ListGroup>}\n      </Card.Body>\n    </Card>\n  )\n}\n\n\n\n\n//contact item\nexport const ContactItemComponent = (props) => {\n  return(\n    <ListGroup.Item>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={12} sm={12} lg={4} md={4}>\n            <Image src={img} roundedCircle />\n          </Col>\n          <Col xs={12} sm={12} lg={8} md={8}>\n            <span data-testid=\"id-ctName\" className=\"ctname\">{props.Name}</span><br />\n            <span data-testid=\"id-cpName\">{props.Company}</span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span>\n              <FontAwesomeIcon icon={faEnvelope} />\n            </span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span data-testid=\"id-ctEmails\" className=\"ctlstcnt\">{props.Emails.join(\",\")}</span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span>\n              <FontAwesomeIcon icon={faMobileAlt} />\n            </span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span data-testid=\"id-ctPhone\" className=\"ctlstcnt\">{props.Phones.join(\",\")}</span>\n          </Col>\n        </Row>\n        <Row xs={12} sm={12} lg={12} md={12} className=\"lstpadder\">\n          <Col xs={2} sm={2} lg={2} md={2}>\n            <span>\n              <FontAwesomeIcon icon={faClock} />\n            </span>\n          </Col>\n          <Col xs={10} sm={10} lg={10} md={10}>\n            <span data-testid=\"id-ctLstct\" className=\"ctlstcnt\">{props.LastContact}</span>\n          </Col>\n          <Col></Col>\n        </Row>\n    </ListGroup.Item>\n  )\n}\n\n\n\n\n//contact card\nexport const ContactCardComponent = (props) => {\n  const [filter, setFilter] = useState({});\n  const [res, setRes] = useState([]);\n  const [body, setBody] = useState(null);\n\n  useEffect(()=>{\n    if (typeof props.filter !== 'undefined')\n    {\n      setFilter(props.filter);\n    }    \n  },[props])\n\n  useEffect(()=>{\n    fetch('/data-sources/contacts.json').then(response => response.json()).then(contactsData => {\n      if(contactsData !== ''){\n        let filtered_res = contactsData.contacts.filter(contact => contact.matching_terms.some(term => term === filter.qval)); \n        setRes(filtered_res);\n      }\n    });  \n  },[filter])\n\n  useEffect(()=>{\n    let body_dat = res.map(ele =>   \n    <ContactItemComponent\n    key={ele.id}\n    Id={ele.id?ele.id:\"\"} \n    Name= {ele.name?ele.name:\"\"}\n    Company ={ele.company?ele.company:\"\"}\n    Emails = {ele.emails?ele.emails:\"\"}\n    Phones = {ele.phones?ele.phones:\"\"}\n    LastContact = {ele.last_contact? new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    }).format(new Date(ele.last_contact)):\"\"}  \n    />       \n  )   \n  setBody(body_dat);\n  },[res])\n\n  return(\n    <Card style={{height: \"400px\"}}>\n      <Card.Header>Contacts</Card.Header>\n      <Card.Body style={{padding : \"0px\", overflowY: \"scroll\"}}>\n        {body === null || body.length === 0 ? <ShowEmptyComponent message={\"No Contacts to display!\"}/> : <ListGroup>{body}</ListGroup>}\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport const SearchComponent = (props) => {\n  const [query, setQuery] = useState('');\n\n  const handleEnter = (e) => {\n    if(e.key === \"Enter\"){\n      props.queryHandler(query)\n    }\n  }\n  \n  const handleSumbit = (e) => {\n    props.queryHandler(query)\n  }\n\n  const styles= {\n    outline: \"none\",\n  boxShadow:\"none\",\n  border:\"1px solid #ccc\"\n  }\n\n  return(\n    <Fragment>\n      <InputGroup className=\"mb-3\">\n      <FormControl style={styles}\n        placeholder=\"Search something!\"\n        aria-label=\"search\"\n        aria-describedby=\"basic-addon1\"\n        onChange={(e)=>{setQuery(e.target.value)}}\n        onKeyDown = {(e) => handleEnter(e)}\n      />\n      <InputGroup.Append>\n        <InputGroup.Text>\n          <FontAwesomeIcon icon={faSearch} onClick={(e) => handleSumbit(e)}/>\n        </InputGroup.Text>        \n      </InputGroup.Append>\n    </InputGroup>    \n  </Fragment>\n  )\n}\n\nexport const HeaderComponent = (props) => {\n  return(\n    <h1>Welcome to Acme Search</h1>\n  )\n}\n\nfunction App() {\n  const [query, setQuery] = useState({});\n\n  const handleQueryChange = (q) => {\n    //create query obj\n    let qobj = {\n      qval: q,\n      tspt: Date.now()\n    }\n\n    setQuery(qobj);\n  } \n\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Row style={{marginTop: \"50px\"}}>\n          <Col xs={12} sm={12} lg={12} md={12}>\n            <HeaderComponent />\n          </Col>\n        </Row>\n        <Row style={{marginTop: \"25px\"}}>\n          <Col xs={12} sm={12} lg={{span : 4, offset: 4}} md={{span : 4, offset: 4}}>\n              <SearchComponent  queryHandler={handleQueryChange}/>\n          </Col>           \n        </Row>\n\n        <Row style={{marginTop: \"50px\"}}>\n          <Col xs={12} sm={12} lg={12} md={12}>\n            <CardDeck>\n              <ContactCardComponent filter={query}/>\n              <CalendarCardComponent filter={query}/>\n              <DropboxCardComponent filter={query}/>\n              <SlackCardComponent filter={query}/>\n              <TweetCardComponent filter={query}/>\n            </CardDeck>\n          </Col>\n        </Row>\n      </Container>   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './application/css/index.css';\nimport App from './application/components/App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}